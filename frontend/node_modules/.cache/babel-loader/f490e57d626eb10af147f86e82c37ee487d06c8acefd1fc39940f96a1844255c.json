{"ast":null,"code":"var _jsxFileName = \"/Users/garrett.heath/Desktop/projects/digitRecognition/frontend/src/pages/homePage.js\",\n  _s = $RefreshSig$();\nimport { DrawingPad } from \"../components/drawingPad\";\nimport { PredictionResult } from \"../components/predictionResult\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE = \"http://127.0.0.1:5000\";\n\n// Clear the canvas and result\nconst clear = () => {\n  const canvas = canvasRef.current;\n  const ctx = canvas.getContext('2d');\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n};\nexport const HomePage = () => {\n  _s();\n  const [prediction, setPrediction] = useState(\"\");\n  const postImage = async imageInfo => {\n    const data = await fetch(API_BASE + \"/predict\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        image: imageInfo\n      })\n    }).then(res => res.json()).then(data => setPrediction(data.prediction)).catch(error => console.error('Error: ', error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\",\n    children: [/*#__PURE__*/_jsxDEV(DrawingPad, {\n      postImage: postImage,\n      clear: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PredictionResult, {\n      prediction: prediction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(HomePage, \"08WraA1brmN2G6EPdBpn5W5zbds=\");\n_c = HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["DrawingPad","PredictionResult","useState","jsxDEV","_jsxDEV","API_BASE","clear","canvas","canvasRef","current","ctx","getContext","clearRect","width","height","HomePage","_s","prediction","setPrediction","postImage","imageInfo","data","fetch","method","headers","body","JSON","stringify","image","then","res","json","catch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/garrett.heath/Desktop/projects/digitRecognition/frontend/src/pages/homePage.js"],"sourcesContent":["import { DrawingPad } from \"../components/drawingPad\";\nimport { PredictionResult } from \"../components/predictionResult\";\nimport { useState } from \"react\";\n\n\nconst API_BASE = \"http://127.0.0.1:5000\"\n\n// Clear the canvas and result\nconst clear = () => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height)\n}\n\nexport const HomePage = () => {\n    const [prediction, setPrediction] = useState(\"\")\n\n    const postImage = async (imageInfo) => {\n        const data = await fetch(API_BASE + \"/predict\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n              image: imageInfo\n            }),\n          }).then((res) => res.json())\n            .then(data => setPrediction(data.prediction))\n            .catch(error => console.error('Error: ', error))\n    }\n  \n    return (\n        <div className=\"\">\n            <DrawingPad postImage={postImage} clear/>\n            <PredictionResult prediction={prediction}/>\n        </div>\n    );\n}"],"mappings":";;AAAA,SAASA,UAAU,QAAQ,0BAA0B;AACrD,SAASC,gBAAgB,QAAQ,gCAAgC;AACjE,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGjC,MAAMC,QAAQ,GAAG,uBAAuB;;AAExC;AACA,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAChB,MAAMC,MAAM,GAAGC,SAAS,CAACC,OAAO;EAChC,MAAMC,GAAG,GAAGH,MAAM,CAACI,UAAU,CAAC,IAAI,CAAC;EACnCD,GAAG,CAACE,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEL,MAAM,CAACM,KAAK,EAAEN,MAAM,CAACO,MAAM,CAAC;AACpD,CAAC;AAED,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMiB,SAAS,GAAG,MAAOC,SAAS,IAAK;IACnC,MAAMC,IAAI,GAAG,MAAMC,KAAK,CAACjB,QAAQ,GAAG,UAAU,EAAE;MAC5CkB,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBC,KAAK,EAAER;MACT,CAAC;IACH,CAAC,CAAC,CAACS,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAACR,IAAI,IAAIH,aAAa,CAACG,IAAI,CAACJ,UAAU,CAAC,CAAC,CAC5Ce,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAC,CAAC;EACxD,CAAC;EAED,oBACI7B,OAAA;IAAK+B,SAAS,EAAC,EAAE;IAAAC,QAAA,gBACbhC,OAAA,CAACJ,UAAU;MAACmB,SAAS,EAAEA,SAAU;MAACb,KAAK;IAAA;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACzCpC,OAAA,CAACH,gBAAgB;MAACgB,UAAU,EAAEA;IAAW;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1C,CAAC;AAEd,CAAC;AAAAxB,EAAA,CAvBYD,QAAQ;AAAA0B,EAAA,GAAR1B,QAAQ;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}