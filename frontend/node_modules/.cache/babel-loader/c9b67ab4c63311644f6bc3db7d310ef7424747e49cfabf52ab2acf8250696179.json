{"ast":null,"code":"var _jsxFileName = \"/Users/garrett.heath/Desktop/projects/digitRecognition/frontend/src/components/drawingPad.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DrawingPad = ({}) => {\n  _s();\n  const canvasRef = useRef(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n\n  // Set the canvas size\n  const canvasWidth = 500;\n  const canvasHeight = 500;\n\n  // Start drawing\n  const startDrawing = e => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.beginPath();\n    ctx.moveTo(e.nativeEvent.offsetX, e.nativeEvent.offsetY);\n    setIsDrawing(true);\n  };\n\n  // Draw while moving the mouse\n  const draw = e => {\n    if (!isDrawing) return;\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.lineTo(e.nativeEvent.offsetX, e.nativeEvent.offsetY);\n    ctx.stroke();\n  };\n\n  // Stop drawing\n  const stopDrawing = () => {\n    setIsDrawing(false);\n  };\n\n  // Clear the canvas\n  const clearCanvas = () => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height); // Clear the canvas\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-[280px] w-[280px]\",\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: canvasWidth,\n      height: canvasHeight,\n      onMouseDown: startDrawing,\n      onMouseMove: draw,\n      onMouseUp: stopDrawing,\n      onMouseLeave: stopDrawing,\n      style: {\n        border: '1px solid black'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: clearCanvas,\n      children: \"Clear\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(DrawingPad, \"KReG7kccaStdFdZmsMO/aeLjIx8=\");\n_c = DrawingPad;\nvar _c;\n$RefreshReg$(_c, \"DrawingPad\");","map":{"version":3,"names":["React","useRef","useState","jsxDEV","_jsxDEV","DrawingPad","_s","canvasRef","isDrawing","setIsDrawing","canvasWidth","canvasHeight","startDrawing","e","canvas","current","ctx","getContext","beginPath","moveTo","nativeEvent","offsetX","offsetY","draw","lineTo","stroke","stopDrawing","clearCanvas","clearRect","width","height","className","children","ref","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","style","border","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/garrett.heath/Desktop/projects/digitRecognition/frontend/src/components/drawingPad.jsx"],"sourcesContent":["import React, { useRef, useState } from 'react';\n\nexport const DrawingPad = ({  }) => {\n\n  const canvasRef = useRef(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n\n  // Set the canvas size\n  const canvasWidth = 500;\n  const canvasHeight = 500;\n\n  // Start drawing\n  const startDrawing = (e) => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.beginPath();\n    ctx.moveTo(e.nativeEvent.offsetX, e.nativeEvent.offsetY);\n    setIsDrawing(true);\n  };\n\n  // Draw while moving the mouse\n  const draw = (e) => {\n    if (!isDrawing) return;\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.lineTo(e.nativeEvent.offsetX, e.nativeEvent.offsetY);\n    ctx.stroke();\n  };\n\n  // Stop drawing\n  const stopDrawing = () => {\n    setIsDrawing(false);\n  };\n\n  // Clear the canvas\n  const clearCanvas = () => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height); // Clear the canvas\n  };\n\n  return (\n    <div className=\"h-[280px] w-[280px]\">\n      <canvas\n        ref={canvasRef}\n        width={canvasWidth}\n        height={canvasHeight}\n        onMouseDown={startDrawing}\n        onMouseMove={draw}\n        onMouseUp={stopDrawing}\n        onMouseLeave={stopDrawing}\n        style={{ border: '1px solid black' }}\n      />\n      <button onClick={clearCanvas}>Clear</button>\n    </div>\n  );\n};"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,OAAO,MAAMC,UAAU,GAAGA,CAAC,CAAG,CAAC,KAAK;EAAAC,EAAA;EAElC,MAAMC,SAAS,GAAGN,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;;EAEjD;EACA,MAAMQ,WAAW,GAAG,GAAG;EACvB,MAAMC,YAAY,GAAG,GAAG;;EAExB;EACA,MAAMC,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAMC,MAAM,GAAGP,SAAS,CAACQ,OAAO;IAChC,MAAMC,GAAG,GAAGF,MAAM,CAACG,UAAU,CAAC,IAAI,CAAC;IACnCD,GAAG,CAACE,SAAS,CAAC,CAAC;IACfF,GAAG,CAACG,MAAM,CAACN,CAAC,CAACO,WAAW,CAACC,OAAO,EAAER,CAAC,CAACO,WAAW,CAACE,OAAO,CAAC;IACxDb,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;;EAED;EACA,MAAMc,IAAI,GAAIV,CAAC,IAAK;IAClB,IAAI,CAACL,SAAS,EAAE;IAChB,MAAMM,MAAM,GAAGP,SAAS,CAACQ,OAAO;IAChC,MAAMC,GAAG,GAAGF,MAAM,CAACG,UAAU,CAAC,IAAI,CAAC;IACnCD,GAAG,CAACQ,MAAM,CAACX,CAAC,CAACO,WAAW,CAACC,OAAO,EAAER,CAAC,CAACO,WAAW,CAACE,OAAO,CAAC;IACxDN,GAAG,CAACS,MAAM,CAAC,CAAC;EACd,CAAC;;EAED;EACA,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxBjB,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;;EAED;EACA,MAAMkB,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMb,MAAM,GAAGP,SAAS,CAACQ,OAAO;IAChC,MAAMC,GAAG,GAAGF,MAAM,CAACG,UAAU,CAAC,IAAI,CAAC;IACnCD,GAAG,CAACY,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEd,MAAM,CAACe,KAAK,EAAEf,MAAM,CAACgB,MAAM,CAAC,CAAC,CAAC;EACpD,CAAC;EAED,oBACE1B,OAAA;IAAK2B,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAClC5B,OAAA;MACE6B,GAAG,EAAE1B,SAAU;MACfsB,KAAK,EAAEnB,WAAY;MACnBoB,MAAM,EAAEnB,YAAa;MACrBuB,WAAW,EAAEtB,YAAa;MAC1BuB,WAAW,EAAEZ,IAAK;MAClBa,SAAS,EAAEV,WAAY;MACvBW,YAAY,EAAEX,WAAY;MAC1BY,KAAK,EAAE;QAAEC,MAAM,EAAE;MAAkB;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC,eACFvC,OAAA;MAAQwC,OAAO,EAAEjB,WAAY;MAAAK,QAAA,EAAC;IAAK;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzC,CAAC;AAEV,CAAC;AAACrC,EAAA,CAtDWD,UAAU;AAAAwC,EAAA,GAAVxC,UAAU;AAAA,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}