{"ast":null,"code":"var _jsxFileName = \"/Users/garrett.heath/Desktop/projects/digitRecognition/frontend/src/components/drawingPad.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DrawingPad = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n\n  // Set the canvas size\n  const canvasWidth = 280;\n  const canvasHeight = 280;\n\n  // Get mouse position on canvas\n  const getMousePos = e => {\n    const rect = canvasRef.current.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    return {\n      x,\n      y\n    };\n  };\n\n  // Start drawing\n  const startDrawing = e => {\n    const pos = e.touches ? getMousePos(e.touches[0]) : getMousePos(e);\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.beginPath();\n    ctx.moveTo(pos.x, pos.y);\n    setIsDrawing(true);\n  };\n\n  // Draw while moving the mouse\n  const draw = e => {\n    if (!isDrawing) return;\n    const pos = e.touches ? getMousePos(e.touches[0]) : getMousePos(e);\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.lineTo(pos.x, pos.y);\n    ctx.stroke();\n  };\n\n  // Stop drawing\n  const stopDrawing = () => {\n    setIsDrawing(false);\n  };\n\n  // Clear the canvas\n  const clearCanvas = () => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height); // Clear the canvas\n  };\n\n  // Prevent touchmove default behavior to avoid scrolling\n  const preventTouchMove = e => {\n    e.preventDefault();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\",\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: canvasWidth,\n      height: canvasHeight,\n      onMouseDown: startDrawing,\n      onMouseMove: draw,\n      onMouseUp: stopDrawing,\n      onMouseLeave: stopDrawing,\n      onTouchStart: startDrawing,\n      onTouchMove: draw,\n      onTouchEnd: stopDrawing,\n      onTouchCancel: stopDrawing,\n      onTouchStartCapture: preventTouchMove,\n      onTouchMoveCapture: preventTouchMove,\n      style: {\n        border: '1px solid black'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: clearCanvas,\n      children: \"Clear\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(DrawingPad, \"KReG7kccaStdFdZmsMO/aeLjIx8=\");\n_c = DrawingPad;\nvar _c;\n$RefreshReg$(_c, \"DrawingPad\");","map":{"version":3,"names":["React","useRef","useState","jsxDEV","_jsxDEV","DrawingPad","_s","canvasRef","isDrawing","setIsDrawing","canvasWidth","canvasHeight","getMousePos","e","rect","current","getBoundingClientRect","x","clientX","left","y","clientY","top","startDrawing","pos","touches","canvas","ctx","getContext","beginPath","moveTo","draw","lineTo","stroke","stopDrawing","clearCanvas","clearRect","width","height","preventTouchMove","preventDefault","className","children","ref","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","onTouchStart","onTouchMove","onTouchEnd","onTouchCancel","onTouchStartCapture","onTouchMoveCapture","style","border","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/garrett.heath/Desktop/projects/digitRecognition/frontend/src/components/drawingPad.jsx"],"sourcesContent":["import React, { useRef, useState } from 'react';\n\nexport const DrawingPad = () => {\n\n  const canvasRef = useRef(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n\n  // Set the canvas size\n  const canvasWidth = 280;\n  const canvasHeight = 280;\n\n   // Get mouse position on canvas\n   const getMousePos = (e) => {\n    const rect = canvasRef.current.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    return { x, y };\n  };\n\n  // Start drawing\n  const startDrawing = (e) => {\n    const pos = e.touches ? getMousePos(e.touches[0]) : getMousePos(e);\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.beginPath();\n    ctx.moveTo(pos.x, pos.y);\n    setIsDrawing(true);\n  };\n\n  // Draw while moving the mouse\n  const draw = (e) => {\n    if (!isDrawing) return;\n    const pos = e.touches ? getMousePos(e.touches[0]) : getMousePos(e);\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.lineTo(pos.x, pos.y);\n    ctx.stroke();\n  };\n\n  // Stop drawing\n  const stopDrawing = () => {\n    setIsDrawing(false);\n  };\n\n  // Clear the canvas\n  const clearCanvas = () => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height); // Clear the canvas\n  };\n\n  // Prevent touchmove default behavior to avoid scrolling\n  const preventTouchMove = (e) => {\n    e.preventDefault();\n  };\n\n  return (\n    <div className=\"\">\n      <canvas\n        ref={canvasRef}\n        width={canvasWidth}\n        height={canvasHeight}\n        onMouseDown={startDrawing}\n        onMouseMove={draw}\n        onMouseUp={stopDrawing}\n        onMouseLeave={stopDrawing}\n        onTouchStart={startDrawing}\n        onTouchMove={draw}\n        onTouchEnd={stopDrawing}\n        onTouchCancel={stopDrawing}\n        onTouchStartCapture={preventTouchMove}\n        onTouchMoveCapture={preventTouchMove}\n        style={{ border: '1px solid black' }}\n      />\n      <button onClick={clearCanvas}>Clear</button>\n    </div>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}