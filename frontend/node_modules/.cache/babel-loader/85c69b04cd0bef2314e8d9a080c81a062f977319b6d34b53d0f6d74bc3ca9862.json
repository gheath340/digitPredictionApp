{"ast":null,"code":"var _jsxFileName = \"/Users/garrett.heath/Desktop/projects/digitRecognition/frontend/src/components/drawingPad.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DrawingPad = ({\n  postImage,\n  clear\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n\n  // Set the canvas size\n  const canvasWidth = 280;\n  const canvasHeight = 280;\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    // Set the canvas background to white\n    ctx.fillStyle = \"white\";\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n    setBrushSize(e.target.value);\n  }, []);\n\n  // Get mouse position on canvas\n  const getMousePos = e => {\n    const rect = canvasRef.current.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    return {\n      x,\n      y\n    };\n  };\n\n  // Start drawing\n  const startDrawing = e => {\n    e.preventDefault();\n    const pos = e.touches ? getMousePos(e.touches[0]) : getMousePos(e);\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.beginPath();\n    ctx.moveTo(pos.x, pos.y);\n    setIsDrawing(true);\n  };\n\n  // Draw while moving the mouse\n  const draw = e => {\n    if (!isDrawing) return;\n    e.preventDefault();\n    const pos = e.touches ? getMousePos(e.touches[0]) : getMousePos(e);\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.lineTo(pos.x, pos.y);\n    ctx.stroke();\n  };\n\n  // Stop drawing\n  const stopDrawing = () => {\n    setIsDrawing(false);\n  };\n  const clearCanvas = () => {\n    clear(canvasRef);\n  };\n\n  // Captures the data inside the canvas, sends it to server to be predicted\n  const download = () => {\n    let canvas1 = canvasRef.current;\n    let url = canvas1.toDataURL(\"image/png\");\n    postImage(url);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\",\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: canvasWidth,\n      height: canvasHeight,\n      onMouseDown: startDrawing,\n      onMouseMove: draw,\n      onMouseUp: stopDrawing,\n      onMouseLeave: stopDrawing,\n      onTouchStart: startDrawing,\n      onTouchMove: draw,\n      onTouchEnd: stopDrawing,\n      onTouchCancel: stopDrawing,\n      style: {\n        border: '1px solid black',\n        touchAction: 'none'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"border border-1 border-black transition-transform transform hover:scale-110 active:scale-95 rounded-lg focus:outline-none\",\n      onClick: clearCanvas,\n      children: \"Clear\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"border border-1 border-black transition-transform transform hover:scale-110 active:scale-95 rounded-lg focus:outline-none\",\n      onClick: download,\n      children: \"Capture\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(DrawingPad, \"7LoXpHITDLpq0d7a6AUFwW76yao=\");\n_c = DrawingPad;\nvar _c;\n$RefreshReg$(_c, \"DrawingPad\");","map":{"version":3,"names":["React","useRef","useState","useEffect","jsxDEV","_jsxDEV","DrawingPad","postImage","clear","_s","canvasRef","isDrawing","setIsDrawing","canvasWidth","canvasHeight","canvas","current","ctx","getContext","fillStyle","fillRect","width","height","setBrushSize","e","target","value","getMousePos","rect","getBoundingClientRect","x","clientX","left","y","clientY","top","startDrawing","preventDefault","pos","touches","beginPath","moveTo","draw","lineTo","stroke","stopDrawing","clearCanvas","download","canvas1","url","toDataURL","className","children","ref","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","onTouchStart","onTouchMove","onTouchEnd","onTouchCancel","style","border","touchAction","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/garrett.heath/Desktop/projects/digitRecognition/frontend/src/components/drawingPad.jsx"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\n\nexport const DrawingPad = ({ postImage, clear }) => {\n\n  const canvasRef = useRef(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n\n  // Set the canvas size\n  const canvasWidth = 280;\n  const canvasHeight = 280;\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    // Set the canvas background to white\n    ctx.fillStyle = \"white\";\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n    setBrushSize(e.target.value)\n  }, []);\n\n   // Get mouse position on canvas\n    const getMousePos = (e) => {\n    const rect = canvasRef.current.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    return { x, y };\n  };\n\n  // Start drawing\n  const startDrawing = (e) => {\n    e.preventDefault()\n    const pos = e.touches ? getMousePos(e.touches[0]) : getMousePos(e);\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.beginPath();\n    ctx.moveTo(pos.x, pos.y);\n    setIsDrawing(true);\n  };\n\n  // Draw while moving the mouse\n  const draw = (e) => {\n    if (!isDrawing) return;\n    e.preventDefault()\n    const pos = e.touches ? getMousePos(e.touches[0]) : getMousePos(e);\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.lineTo(pos.x, pos.y);\n    ctx.stroke();\n  };\n\n  // Stop drawing\n  const stopDrawing = () => {\n    setIsDrawing(false);\n  };\n\n  const clearCanvas = () => {\n    clear(canvasRef)\n  }\n\n  // Captures the data inside the canvas, sends it to server to be predicted\n  const download = () => {\n    let canvas1 = canvasRef.current;\n    let url = canvas1.toDataURL(\"image/png\");\n    postImage(url)\n\n  }\n\n  return (\n    <div className=\"\">\n        <canvas\n            ref={canvasRef}\n            width={canvasWidth}\n            height={canvasHeight}\n            onMouseDown={startDrawing}\n            onMouseMove={draw}\n            onMouseUp={stopDrawing}\n            onMouseLeave={stopDrawing}\n            onTouchStart={startDrawing}\n            onTouchMove={draw}\n            onTouchEnd={stopDrawing}\n            onTouchCancel={stopDrawing}\n            style={{ \n                border: '1px solid black',\n                touchAction: 'none',\n            }}\n        />\n        <button className=\"border border-1 border-black transition-transform transform hover:scale-110 active:scale-95 rounded-lg focus:outline-none\" onClick={clearCanvas}>Clear</button>\n        <button className=\"border border-1 border-black transition-transform transform hover:scale-110 active:scale-95 rounded-lg focus:outline-none\" onClick={download}>Capture</button>\n    </div>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}