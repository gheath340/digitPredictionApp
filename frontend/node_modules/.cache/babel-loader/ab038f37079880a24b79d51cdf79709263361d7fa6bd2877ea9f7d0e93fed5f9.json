{"ast":null,"code":"var _jsxFileName = \"/Users/garrett.heath/Desktop/projects/digitRecognition/frontend/src/components/drawingPad.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DrawingPad = ({\n  postImage,\n  clear\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n\n  // Set the canvas size\n  const canvasWidth = 280;\n  const canvasHeight = 280;\n\n  // Get mouse position on canvas\n  const getMousePos = e => {\n    const rect = canvasRef.current.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    return {\n      x,\n      y\n    };\n  };\n\n  // Start drawing\n  const startDrawing = e => {\n    e.preventDefault();\n    const pos = e.touches ? getMousePos(e.touches[0]) : getMousePos(e);\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.beginPath();\n    ctx.moveTo(pos.x, pos.y);\n    setIsDrawing(true);\n  };\n\n  // Draw while moving the mouse\n  const draw = e => {\n    if (!isDrawing) return;\n    e.preventDefault();\n    const pos = e.touches ? getMousePos(e.touches[0]) : getMousePos(e);\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.lineTo(pos.x, pos.y);\n    ctx.stroke();\n  };\n\n  // Stop drawing\n  const stopDrawing = () => {\n    setIsDrawing(false);\n  };\n  const clearCanvas = () => {\n    clear(canvasRef);\n  };\n\n  // Captures the data inside the canvas, sends it to server to be predicted\n  const download = () => {\n    setTimeout(() => {});\n    let canvas1 = canvasRef.current;\n    let url = canvas1.toDataURL(\"image/png\");\n    postImage(url);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\",\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: canvasWidth,\n      height: canvasHeight,\n      onMouseDown: startDrawing,\n      onMouseMove: draw,\n      onMouseUp: stopDrawing,\n      onMouseLeave: stopDrawing,\n      onTouchStart: startDrawing,\n      onTouchMove: draw,\n      onTouchEnd: stopDrawing,\n      onTouchCancel: stopDrawing,\n      style: {\n        border: '1px solid black',\n        touchAction: 'none'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"border border-1 border-black transition-transform transform hover:scale-110 active:scale-95 rounded-lg focus:outline-none\",\n      onClick: clearCanvas,\n      children: \"Clear\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"border border-1 border-black transition-transform transform hover:scale-110 active:scale-95 rounded-lg focus:outline-none\",\n      onClick: download,\n      children: \"Capture\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(DrawingPad, \"KReG7kccaStdFdZmsMO/aeLjIx8=\");\n_c = DrawingPad;\nvar _c;\n$RefreshReg$(_c, \"DrawingPad\");","map":{"version":3,"names":["React","useRef","useState","jsxDEV","_jsxDEV","DrawingPad","postImage","clear","_s","canvasRef","isDrawing","setIsDrawing","canvasWidth","canvasHeight","getMousePos","e","rect","current","getBoundingClientRect","x","clientX","left","y","clientY","top","startDrawing","preventDefault","pos","touches","canvas","ctx","getContext","beginPath","moveTo","draw","lineTo","stroke","stopDrawing","clearCanvas","download","setTimeout","canvas1","url","toDataURL","className","children","ref","width","height","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","onTouchStart","onTouchMove","onTouchEnd","onTouchCancel","style","border","touchAction","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/garrett.heath/Desktop/projects/digitRecognition/frontend/src/components/drawingPad.jsx"],"sourcesContent":["import React, { useRef, useState } from 'react';\n\nexport const DrawingPad = ({ postImage, clear }) => {\n\n  const canvasRef = useRef(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n\n  // Set the canvas size\n  const canvasWidth = 280;\n  const canvasHeight = 280;\n\n   // Get mouse position on canvas\n    const getMousePos = (e) => {\n    const rect = canvasRef.current.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    return { x, y };\n  };\n\n  // Start drawing\n  const startDrawing = (e) => {\n    e.preventDefault()\n    const pos = e.touches ? getMousePos(e.touches[0]) : getMousePos(e);\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.beginPath();\n    ctx.moveTo(pos.x, pos.y);\n    setIsDrawing(true);\n  };\n\n  // Draw while moving the mouse\n  const draw = (e) => {\n    if (!isDrawing) return;\n    e.preventDefault()\n    const pos = e.touches ? getMousePos(e.touches[0]) : getMousePos(e);\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.lineTo(pos.x, pos.y);\n    ctx.stroke();\n  };\n\n  // Stop drawing\n  const stopDrawing = () => {\n    setIsDrawing(false);\n  };\n\n  const clearCanvas = () => {\n    clear(canvasRef)\n  }\n\n  // Captures the data inside the canvas, sends it to server to be predicted\n  const download = () => {\n    setTimeout(() => {\n\n    })\n    let canvas1 = canvasRef.current;\n    let url = canvas1.toDataURL(\"image/png\");\n    postImage(url)\n  }\n\n  return (\n    <div className=\"\">\n        <canvas\n            ref={canvasRef}\n            width={canvasWidth}\n            height={canvasHeight}\n            onMouseDown={startDrawing}\n            onMouseMove={draw}\n            onMouseUp={stopDrawing}\n            onMouseLeave={stopDrawing}\n            onTouchStart={startDrawing}\n            onTouchMove={draw}\n            onTouchEnd={stopDrawing}\n            onTouchCancel={stopDrawing}\n            style={{ \n                border: '1px solid black',\n                touchAction: 'none',\n            }}\n        />\n        <button className=\"border border-1 border-black transition-transform transform hover:scale-110 active:scale-95 rounded-lg focus:outline-none\" onClick={clearCanvas}>Clear</button>\n        <button className=\"border border-1 border-black transition-transform transform hover:scale-110 active:scale-95 rounded-lg focus:outline-none\" onClick={download}>Capture</button>\n    </div>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}