{"ast":null,"code":"var _jsxFileName = \"/Users/garrett.heath/Desktop/projects/digitRecognition/frontend/src/components/canvas.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Canvas = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n\n  // Set the canvas size\n  const canvasWidth = 280;\n  const canvasHeight = 280;\n\n  // Get mouse position on canvas\n  const getMousePos = e => {\n    const rect = canvasRef.current.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    return {\n      x,\n      y\n    };\n  };\n\n  // Start drawing\n  const startDrawing = e => {\n    e.preventDefault();\n    const pos = e.touches ? getMousePos(e.touches[0]) : getMousePos(e);\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.beginPath();\n    ctx.moveTo(pos.x, pos.y);\n    setIsDrawing(true);\n  };\n\n  // Draw while moving the mouse\n  const draw = e => {\n    if (!isDrawing) return;\n    e.preventDefault();\n    const pos = e.touches ? getMousePos(e.touches[0]) : getMousePos(e);\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.lineTo(pos.x, pos.y);\n    ctx.stroke();\n  };\n\n  // Stop drawing\n  const stopDrawing = () => {\n    setIsDrawing(false);\n  };\n\n  // Clear the canvas\n  const clearCanvas = () => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height); // Clear the canvas\n  };\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    width: canvasWidth,\n    height: canvasHeight,\n    onMouseDown: startDrawing,\n    onMouseMove: draw,\n    onMouseUp: stopDrawing,\n    onMouseLeave: stopDrawing,\n    onTouchStart: startDrawing,\n    onTouchMove: draw,\n    onTouchEnd: stopDrawing,\n    onTouchCancel: stopDrawing,\n    style: {\n      border: '1px solid black',\n      touchAction: 'none'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n_s(Canvas, \"KReG7kccaStdFdZmsMO/aeLjIx8=\");\n_c = Canvas;\nvar _c;\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"names":["React","useRef","useState","jsxDEV","_jsxDEV","Canvas","_s","canvasRef","isDrawing","setIsDrawing","canvasWidth","canvasHeight","getMousePos","e","rect","current","getBoundingClientRect","x","clientX","left","y","clientY","top","startDrawing","preventDefault","pos","touches","canvas","ctx","getContext","beginPath","moveTo","draw","lineTo","stroke","stopDrawing","clearCanvas","clearRect","width","height","ref","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","onTouchStart","onTouchMove","onTouchEnd","onTouchCancel","style","border","touchAction","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/garrett.heath/Desktop/projects/digitRecognition/frontend/src/components/canvas.jsx"],"sourcesContent":["import React, { useRef, useState } from 'react';\n\n\nexport const Canvas = () => {\n\n    const canvasRef = useRef(null);\n    const [isDrawing, setIsDrawing] = useState(false);\n  \n    // Set the canvas size\n    const canvasWidth = 280;\n    const canvasHeight = 280;\n  \n     // Get mouse position on canvas\n      const getMousePos = (e) => {\n      const rect = canvasRef.current.getBoundingClientRect();\n      const x = e.clientX - rect.left;\n      const y = e.clientY - rect.top;\n      return { x, y };\n    };\n  \n    // Start drawing\n    const startDrawing = (e) => {\n      e.preventDefault()\n      const pos = e.touches ? getMousePos(e.touches[0]) : getMousePos(e);\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext('2d');\n      ctx.beginPath();\n      ctx.moveTo(pos.x, pos.y);\n      setIsDrawing(true);\n    };\n  \n    // Draw while moving the mouse\n    const draw = (e) => {\n      if (!isDrawing) return;\n      e.preventDefault()\n      const pos = e.touches ? getMousePos(e.touches[0]) : getMousePos(e);\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext('2d');\n      ctx.lineTo(pos.x, pos.y);\n      ctx.stroke();\n    };\n  \n    // Stop drawing\n    const stopDrawing = () => {\n      setIsDrawing(false);\n    };\n  \n    // Clear the canvas\n    const clearCanvas = () => {\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext('2d');\n      ctx.clearRect(0, 0, canvas.width, canvas.height); // Clear the canvas\n    };\n  \n    return (\n        <canvas\n            ref={canvasRef}\n            width={canvasWidth}\n            height={canvasHeight}\n            onMouseDown={startDrawing}\n            onMouseMove={draw}\n            onMouseUp={stopDrawing}\n            onMouseLeave={stopDrawing}\n            onTouchStart={startDrawing}\n            onTouchMove={draw}\n            onTouchEnd={stopDrawing}\n            onTouchCancel={stopDrawing}\n            style={{ \n                border: '1px solid black',\n                touchAction: 'none',\n            }}\n        />\n    );\n  }"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}